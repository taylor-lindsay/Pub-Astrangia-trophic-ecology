png("~/Desktop/GITHUB/Pub-Astrangia-trophic-ecology/FIGURES/SIBER/siber_plot_ecotype.png", width = 700, height = 700)
par(mar = c(5, 5, 2, 2))
# Print siber plot
palette(c("#e4d2ba", "#724a29"))
plotSiberObject(siber_ecotype,
ax.pad = 2,  #determines the padding applied around the extremes of the data.
ellipses = T, #Ellipses are drawn for each group independently with
group.ellipses.args = group.ellipses.args, # ellipse data
group.hulls = T, #makes hulls for each group (polygon around all )
group.hulls.args = group.hulls.args, # group hull data
bty = "L", # axes lines
iso.order = c(1,2),
xlab = "PC1 (47.68%)",
ylab = "PC2 (22.66%)",
cex = 0.11, # change size of points
cex.lab = 2,  # Axis label font size
cex.axis = 2,  # Axis tick font size
cex.main = 1.8,
points.order = (19), # change point type
x.limits = c(-4,5),
y.limits = c(-2,4)
)
dev.off()
# plot SEAb
png("~/Desktop/GITHUB/Pub-Astrangia-trophic-ecology/FIGURES/SIBER/siber_plot_ecotype_seab.png", width = 400, height = 700)
# SEAb density plot
siberDensityPlot(
SEAb_ecotype,
clr = e_clrs,
xticklabels = c("", ""),
xlab = c(""),
ylab = c(""),
bty = "L",
las = 1,
cex.axis = 2,  # Axis tick font size
ylim = c(2, 14),
main = ""
)
# Step 2: Add points to the existing plot
points(1:ncol(SEAb_ecotype), summary_ecotype[3,], col = "red", pch = "x", lwd = 2)
dev.off()
# SIBER BY ECOTYPE - HOST
# stats
summary_ecotype_s # TA, SEA, SEAc
overlap_ecotype_s # ellipse overlap fraction
percent_overlap_ecotype_s # percent ellipse overlap
SEAb_modes_ecotype_s # modes
SEAb_cred_ecotype_s # credibilities
# plot SIBER
png("~/Desktop/GITHUB/Pub-Astrangia-trophic-ecology/FIGURES/SIBER/siber_plot_ecotype_s.png", width = 700, height = 700)
par(mar = c(5, 5, 2, 2))
# Print siber plot
palette(c("#e4d2ba", "#724a29"))
plotSiberObject(siber_ecotype_s,
ax.pad = 2,  #determines the padding applied around the extremes of the data.
ellipses = T, #Ellipses are drawn for each group independently with
group.ellipses.args = group.ellipses.args, # ellipse data
group.hulls = T, #makes hulls for each group (polygon around all )
group.hulls.args = group.hulls.args, # group hull data
bty = "L", # axes lines
iso.order = c(1,2),
xlab = "PC1 (46.61%)",
ylab = "PC2 (21.59%)",
cex = 0.11, # change size of points
cex.lab = 2,  # Axis label font size
cex.axis = 2,  # Axis tick font size
cex.main = 1.8,
points.order = (19), # change point type
x.limits = c(-3.5,3.5),
y.limits = c(-3,3)
)
dev.off()
# plot SEAb
png("~/Desktop/GITHUB/Pub-Astrangia-trophic-ecology/FIGURES/SIBER/siber_plot_ecotype_s_seab.png", width = 400, height = 700)
# SEAb density plot
siberDensityPlot(
SEAb_ecotype_s,
clr = e_clrs,
xticklabels = c("", ""),
xlab = c(""),
ylab = c(""),
bty = "L",
las = 1,
cex.axis = 2,  # Axis tick font size
ylim = c(0, 11),
main = ""
)
# Step 2: Add points to the existing plot
points(1:ncol(SEAb_ecotype_s), summary_ecotype_s[3,], col = "red", pch = "x", lwd = 2)
dev.off()
# SIBER BY TREATMENT - HOST
# stats
summary_treatment # TA, SEA, SEAc
# control vs. deep
overlap_treatment_deep # ellipse overlap fraction
percent_overlap_treatment_deep # percent ellipse overlap
# control vs. shade
overlap_treatment_shade # ellipse overlap fraction
percent_overlap_treatment_shade # percent ellipse overlap
SEAb_modes_treatment # modes
SEAb_cred_treatment # credibilities
# plot SIBER
png("~/Desktop/GITHUB/Pub-Astrangia-trophic-ecology/FIGURES/SIBER/siber_plot_treat_host.png", width = 700, height = 700)
par(mar = c(5, 5, 2, 2))
# Print siber plot
palette(c("#C0C0E1", "#8A4594", "#210124"))
plotSiberObject(siber_treatment,
ax.pad = 2,  #determines the padding applied around the extremes of the data.
ellipses = T, #Ellipses are drawn for each group independently with
group.ellipses.args = group.ellipses.args, # ellipse data
group.hulls = T, #makes hulls for each group (polygon around all )
group.hulls.args = group.hulls.args, # group hull data
bty = "L", # axes lines
iso.order = c(1,2),
xlab = "PC1 (47.68%)",
ylab = "PC2 (22.66%)",
cex = 0.11, # change size of points
cex.lab = 2,  # Axis label font size
cex.axis = 2,  # Axis tick font size
cex.main = 1.8,
points.order = (19), # change point type
x.limits = c(-4,5),
y.limits = c(-2,4)
)
dev.off()
# Plot SEAb
png("~/Desktop/GITHUB/Pub-Astrangia-trophic-ecology/FIGURES/SIBER/siber_plot_treat_host_seab.png", width = 400, height = 700)
# SEAb density plot
siberDensityPlot(
SEAb_treatment,
clr = t_clrs,
xticklabels = c("", "", ""),
xlab = c(""),
ylab = c("" ),
bty = "L",
las = 1,
cex.axis = 2,  # Axis tick font size
ylim = c(2, 13),
main = ""
)
# Step 2: Add points to the existing plot
points(1:ncol(SEAb_treatment), summary_treatment[3,], col = "red", pch = "x", lwd = 2)
dev.off()
# SIBER BY TREATMENT - SYMBIONTS
# stats
summary_treatment_s # TA, SEA, SEAc
# control vs. deep
overlap_treatment_deep_s # ellipse overlap fraction
percent_overlap_treatment_deep_s # percent ellipse overlap
# control vs. shade
overlap_treatment_shade_s # ellipse overlap fraction
percent_overlap_treatment_shade_s # percent ellipse overlap
SEAb_modes_treatment_s # modes
SEAb_cred_treatment_s # credibilities
# plot SIBER
png("~/Desktop/GITHUB/Pub-Astrangia-trophic-ecology/FIGURES/SIBER/siber_plot_treat_sym.png", width = 700, height = 700)
par(mar = c(5, 5, 2, 2))
# Print SIBER plot
palette(c("#C0C0E1", "#8A4594", "#210124"))
plotSiberObject(siber_treatment_s,
ax.pad = 2,
ellipses = TRUE,
group.ellipses.args = group.ellipses.args,
group.hulls = TRUE,
group.hulls.args = group.hulls.args,
bty = "L",
iso.order = c(1, 2),
xlab = "PC1 (46.61%)",
ylab = "PC2 (21.59%)",
cex = 0.11,
cex.lab = 2,
cex.axis = 2,
cex.main = 1.8,
points.order = 19,
x.limits = c(-3, 3.5),
y.limits = c(-3, 3)
)
dev.off()
# Plot SEAb
png("~/Desktop/GITHUB/Pub-Astrangia-trophic-ecology/FIGURES/SIBER/siber_plot_treat_sym_seab.png", width = 400, height = 700)
# SEAb density plot
siberDensityPlot(
SEAb_treatment_s,
clr = t_clrs,
xticklabels = c("", "", ""),
xlab = c(""),
ylab = expression("" ),
bty = "L",
las = 1,
ylim = c(0, 15),
cex.axis = 2,  # Axis tick font size
main = ""
)
# Step 2: Add points to the existing plot
points(1:ncol(SEAb_treatment_s), summary_treatment_s[3,], col = "red", pch = "x", lwd = 2)
dev.off()
# PLOT LEGEND
legend_data <- data.frame(
category = factor(
c("Host", "Symbiont", "Control", "Shade", "Deep", "Apo", "Sym"),
levels = c("Host", "Symbiont", "Control", "Shade", "Deep", "Apo", "Sym")  # Ensure correct order
),
group = factor(
c("Fraction", "Fraction", "Treatment", "Treatment", "Treatment", "Final Ecotype", "Final Ecotype"),
levels = c("Fraction", "Treatment", "Final Ecotype")  # Order of the groups
),
value = c(1, 1, 1, 1, 1, 1, 1)  # Dummy values for plotting
)
# Create the ggplot
legend_plot <- ggplot() +
# First group with its own scale
geom_bar(
data = subset(legend_data, group == "Fraction"),
aes(x = group, y = value, fill = category),
stat = "identity",
position = "dodge"
) +
scale_fill_manual(
name = "Fraction",
values = c("Host" = "#353535", "Symbiont" = "#1b9e29"),
breaks = c("Host", "Symbiont")  # Explicit order of categories in the legend
) +
new_scale_fill() +  # Allow new scale for Group 2
# Second group with its own scale
geom_bar(
data = subset(legend_data, group == "Treatment"),
aes(x = group, y = value, fill = category),
stat = "identity",
position = "dodge"
) +
scale_fill_manual(
name = "Treatment",
values = c("Control" = "#C0C0E1", "Shade" = "#8A4594", "Deep" = "#210124"),
breaks = c("Control", "Shade", "Deep")  # Explicit order of categories in the legend
) +
new_scale_fill() +  # Allow new scale for Group 3
# Third group with its own scale
geom_bar(
data = subset(legend_data, group == "Final Ecotype"),
aes(x = group, y = value, fill = category),
stat = "identity",
position = "dodge"
) +
scale_fill_manual(
name = "Final Ecotype",
values = c("Apo" = "#e4d2ba", "Sym" = "#724a29"),
breaks = c("Apo", "Sym")  # Explicit order of categories in the legend
) +
theme_void() +  # Remove the axes and background
theme(
legend.position = "right",  # Position all legends
legend.title = element_text(face = "bold", size = 15),  # Bold legend titles
legend.text = element_text(size = 15),  # Adjust legend text size
legend.box = "horizontal"  # Ensure that the legends are in separate boxes
) +
guides(
fill = guide_legend(ncol = 1)  # Arrange legends in a single column
)
# Display the legend-only plot
legend_plot
ggsave("TLAP_CSIA_C_legend.jpg", plot=legend_plot, path = "FIGURES/SIBER/",width = 14, height = 5)
# ISOTOPES: N source mean   -----------------------------------------------------------------
##### Figure out mean values of source AAs
NB_vals <- raw2 %>%
filter(element == "N")%>%
dplyr::select(sample_id, fraction, Phe, Lys) %>%
pivot_longer(cols = c(Phe, Lys), values_to = "deltN", names_to = "AA") %>%
filter(deltN != "NA") %>%
group_by(AA, fraction) %>%
summarise(mean = mean(deltN), sd = sd(deltN))
# TROPHIC POSITION --------------------------------------------------------
# Trophic position (tp) can be calculated using the following equation:  tp = 1+((Glx-Phe-beta)/TDF)
# where
# Glx = the delt15N of Glutamine + Glutamic Acid (Trophic AA)
# Phe = the delt15N of Phenylalanine (Source AA)
# TDF = Trophic discrimination factor = 7.6 (because coral is an amonia producer)
# beta =  Glx-phe of baseline primary producers. = 3.3 (Phytoplankton baseline)
# isoloate data we need to calculate TP
tp <- raw2 %>%
filter(element == "N") %>%
dplyr::select(sample_id, Apo_Sym, treatment, fraction, sym.cm2, Glx, Phe) %>%
mutate(glxphe = Glx-Phe) %>%
mutate(trophic_position = 1+((glxphe-3.3)/7.6)) %>%
mutate(new = if_else(sym.cm2 > 500000, "SYM", "APO"))
tp2 <- tp %>%
filter(sample_id != "G5-C1-49")
tp_host <- tp2 %>% filter(fraction=="Host")
tp_sym <- tp2 %>% filter(fraction=="Sym")
tp_control <- tp2 %>% filter(treatment == "control")
# mean TP
tp_means <-tp2 %>%
group_by(fraction) %>%
summarise(mean = mean(trophic_position), SD = sd(trophic_position))
tp_means
tp2_control <- tp2 %>% filter(treatment == "control")
# TP by fraction
tp_frac <- ggplot(tp2_control, aes(x=fraction, y=trophic_position, fill=fraction)) +
#DATA
geom_boxplot(alpha=0.8, outlier.size=0) +
geom_point(position = pj, size=4, show.legend = FALSE)+
#AESTHETICS
theme_bw() +
labs(y= "", x = "Fraction", fill="") +
scale_fill_manual(values = c("#333333","#1b9e29")) +
theme(
legend.position = "none",
axis.text.y=element_text(size=37),
axis.title=element_text(size=40),
axis.text.x=element_text(size=35),
plot.margin=unit(c(0,1,0.5,0),"cm")
)+
stat_compare_means(comparisons = treatment_comparisons3, method = "wilcox.test", size=12) +
scale_x_discrete(labels=c("Host" = "Host", "Sym" = "Symbiont"))
#ylim(1.95,2.9)
### HOST
# TP by treatment
tp_treat <- ggplot(tp_host, aes(x=treatment, y=trophic_position, fill=treatment)) +
#DATA
geom_boxplot(alpha=0.9, outlier.size=0) +
geom_point(position = pj, size=4, show.legend = FALSE)+
#AESTHETICS
theme_bw() +
labs(y= "", x = "", fill="") +
scale_fill_manual(values = c("#C0C0E1", "#8A4594", "#210124")) +
theme(
legend.position = "none",
axis.text.y=element_text(size=37),
axis.title=element_text(size=40),
axis.text.x=element_blank(),
plot.margin=unit(c(0,0,0,0),"cm")
)+
stat_compare_means(comparisons = treatment_comparisons_combined, method = "wilcox.test", size=12) +
scale_x_discrete(labels=c("APO" = "Aposymbiotic", "SYM" = "Symbiotic")) +
scale_y_continuous(limits = c(1.95, 3), labels = number_format(accuracy = 0.01))
tp_symbionts <- ggplot(tp_host, aes(x=sym.cm2, y=trophic_position)) +
#DATA
geom_smooth(method="lm", formula = y ~ x, color="black", fill="gray") +
geom_point(aes(color=Apo_Sym), size=5) +
stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")),
size=8, label.x = 600000) +
scale_color_manual(values = c("#e4d2ba", "#724a29"))+
geom_vline(xintercept = 500000, linetype="dashed") +
#AESTHETICS
theme_bw()+
labs(y= "", x = "", color="Ecotype") +
theme(
legend.position = "none",
axis.text.y=element_blank(),
axis.title=element_text(size=40),
axis.text.x=element_blank(),
plot.margin=unit(c(0,1,0,0),"cm")
)+
ylim(1.95, 3) +
xlim(-1000, 1530000)
#### SYM
# TP by fraction
tp_treat_s <- ggplot(tp_sym, aes(x=treatment, y=trophic_position, fill=treatment)) +
#DATA
geom_boxplot(alpha=0.9, outlier.size=0) +
geom_point(position = pj, size=4, show.legend = FALSE)+
#AESTHETICS
theme_bw() +
labs(y= "", x = "Treatment", fill="") +
scale_fill_manual(values = c("#C0C0E1", "#8A4594", "#210124")) +
theme(
legend.position = "none",
axis.text.y=element_text(size=37),
axis.title=element_text(size=40),
axis.text.x=element_text(size=35),
plot.margin=unit(c(0,0,0.5,0),"cm")
) +
scale_x_discrete(labels=c('Control','Shade', 'Deep') ) +
stat_compare_means(comparisons = treatment_comparisons_combined, method = "wilcox.test", size=12) +
scale_y_continuous(limits = c(1.9, 2.9), labels = number_format(accuracy = 0.01))
tp_sym_s <- ggplot(tp_sym, aes(x=sym.cm2, y=trophic_position)) +
#DATA
geom_smooth(method="lm", formula = y ~ x, color="black", fill="gray") +
geom_point(aes(color=Apo_Sym), size=5) +
stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")),
size=8, label.x = 600000) +
scale_color_manual(values = c("#e4d2ba", "#724a29"))+
geom_vline(xintercept = 500000, linetype="dashed") +
#AESTHETICS
theme_bw()+
labs(y= "", x = "Symbiont Density" ~(cells/cm^2), color="Ecotype") +
theme(
legend.position = "none",
axis.text.y= element_blank(),
axis.title=element_text(size=36),
axis.text.x=element_text(size=34),
plot.margin=unit(c(0,1,0,0),"cm")
) +
ylim(1.9, 2.9) +
xlim(-1000, 1530000)
## Arrange host graphs
# designate the y axis label
yleft <- textGrob("Trophic Position (glx-phe)", rot=90, gp = gpar(fontsize = 55))
yleft_h <- textGrob("Host", rot=90, gp = gpar(fontsize = 45, fontface = "bold"))
yleft_s <- textGrob("Symbiont", rot=90, gp = gpar(fontsize = 45, fontface = "bold"))
## Arrange host graphs
tp_arrange <- grid.arrange( tp_treat, tp_symbionts, nrow=1, left=yleft_h, widths=c(1,1.5))
## Arrange symbiont graphs
tp_arrange_s <- grid.arrange(tp_treat_s, tp_sym_s, nrow=1, left=yleft_s, widths=c(1,1.5))
tp_arrange_both <- grid.arrange(tp_arrange, tp_arrange_s, nrow=2)
tp_arrange_all <- grid.arrange(tp_frac, tp_arrange_both, nrow=1, left=yleft, widths=c(0.5,1.5),
bottom = grobTree(
textGrob("A", x = 0.06, y = 245, just = "left", gp = gpar(fontsize = 42, fontface = "bold")),
textGrob("B", x = 0.35, y = 245, just = "right", gp = gpar(fontsize = 42, fontface = "bold")),
textGrob("C", x = 0.605, y = 245, just = "right", gp = gpar(fontsize = 42, fontface = "bold")),
textGrob("D", x = 0.35, y = 120, just = "right", gp = gpar(fontsize = 42, fontface = "bold")),
textGrob("E", x = 0.605, y = 120, just = "right", gp = gpar(fontsize = 42, fontface = "bold"))
))
tp_arrange_all
ggsave("TLAP_FIG_7_trophic_position.jpg", plot=tp_arrange_all, path = "FIGURES/", width = 30, height = 25)
# TROPHIC POSITION for Defense--------------------------------------------------------
# TP by fraction
def_tp_frac <- ggplot(tp2_control, aes(x=fraction, y=trophic_position, fill=fraction)) +
#DATA
geom_boxplot(alpha=0.8, outlier.size=0) +
geom_point(position = pj, size=4, show.legend = FALSE)+
#AESTHETICS
theme_bw() +
labs(y= "Trophic Position (glx-phe)", x = "Fraction", fill="") +
scale_fill_manual(values = c("#333333","#1b9e29")) +
theme(
legend.position = "none",
axis.text.y=element_text(size=37),
axis.title=element_text(size=40),
axis.text.x=element_text(size=35)
)+
stat_compare_means(comparisons = treatment_comparisons3, method = "wilcox.test", size=12) +
scale_x_discrete(labels=c("Host" = "Coral", "Sym" = "Symbiont")) +
ylim(0,2.9)
ggsave("TLAP_TP_fraction.jpg", plot=def_tp_frac, path = "FIGURES/Defense/", width = 15, height = 15)
# TP by fraction
def_tp_frac <- ggplot(tp2_control, aes(x=fraction, y=trophic_position, fill=fraction)) +
#DATA
geom_boxplot(alpha=0.8, outlier.size=0) +
geom_point(position = pj, size=4, show.legend = FALSE)+
#AESTHETICS
theme_bw() +
labs(y= "Trophic Position (glx-phe)", x = "Fraction", fill="") +
scale_fill_manual(values = c("#333333","#1b9e29")) +
theme(
legend.position = "none",
axis.text.y=element_text(size=37),
axis.title=element_text(size=40),
axis.text.x=element_text(size=35)
)+
stat_compare_means(comparisons = treatment_comparisons3, method = "wilcox.test", size=12) +
scale_x_discrete(labels=c("Host" = "Coral", "Sym" = "Symbiont")) +
ylim(1,2.9)
ggsave("TLAP_TP_fraction.jpg", plot=def_tp_frac, path = "FIGURES/Defense/", width = 15, height = 15)
# TP by fraction
def_tp_frac <- ggplot(tp2_control, aes(x=fraction, y=trophic_position, fill=fraction)) +
#DATA
geom_boxplot(alpha=0.8, outlier.size=0) +
geom_point(position = pj, size=4, show.legend = FALSE)+
#AESTHETICS
theme_bw() +
labs(y= "Trophic Position (glx-phe)", x = "Fraction", fill="") +
scale_fill_manual(values = c("#333333","#1b9e29")) +
theme(
legend.position = "none",
axis.text.y=element_text(size=37),
axis.title=element_text(size=40),
axis.text.x=element_text(size=35)
)+
stat_compare_means(comparisons = treatment_comparisons3, method = "wilcox.test", size=12) +
scale_x_discrete(labels=c("Host" = "Coral", "Sym" = "Symbiont")) +
ylim(1,3)
ggsave("TLAP_TP_fraction.jpg", plot=def_tp_frac, path = "FIGURES/Defense/", width = 15, height = 15)
def_tp_treat <- ggplot(tp_host, aes(x=treatment, y=trophic_position, fill=treatment)) +
#DATA
geom_boxplot(alpha=0.9, outlier.size=0) +
geom_point(position = pj, size=4, show.legend = FALSE)+
#AESTHETICS
theme_bw() +
labs(y= "Trophic Position (glx-phe)", x = "Treatment", fill="") +
scale_fill_manual(values = c("#C0C0E1", "#8A4594", "#210124")) +
theme(
legend.position = "none",
axis.text.y=element_text(size=37),
axis.title=element_text(size=40),
axis.text.x=element_text(size=35)
)+
stat_compare_means(comparisons = treatment_comparisons_combined, method = "wilcox.test", size=12) +
scale_x_discrete(labels=c("APO" = "Aposymbiotic", "SYM" = "Symbiotic")) +
scale_y_continuous(limits = c(1.95, 3), labels = number_format(accuracy = 0.01))+
ylim(1,3)
ggsave("TLAP_TP_host_treat.jpg", plot=def_tp_treat, path = "FIGURES/Defense/", width = 15, height = 15)
def_tp_symbionts <- ggplot(tp_host, aes(x=sym.cm2, y=trophic_position)) +
#DATA
geom_smooth(method="lm", formula = y ~ x, color="black", fill="gray") +
geom_point( size=5) + #aes(color=Apo_Sym),
stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")),
size=15, label.x = 600000) +
#scale_color_manual(values = c("#e4d2ba", "#724a29"))+
geom_vline(xintercept = 500000, linetype="dashed") +
#AESTHETICS
theme_bw()+
labs(y= "Trophic Position (glx-phe)", x = "Symbiont Density", color="Ecotype") +
theme(
legend.position = "none",
axis.text.y=element_text(size=37),
axis.title=element_text(size=40),
axis.text.x=element_text(size=35)
)+
ylim(1.95, 3) +
xlim(-1000, 1530000)+
ylim(1,3)
ggsave("TLAP_TP_host_frac.jpg", plot=def_tp_symbionts, path = "FIGURES/Defense/", width = 15, height = 15)
